name: Build and Deploy Documentation with Coverage

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz cmake ninja-build gcovr

    - name: Setup Pages
      id: pages
      uses: actions/configure-pages@v4

    - name: Configure CMake with coverage
      run: |
        cmake --preset ninja-mc-coverage -DSDL_UNIX_CONSOLE_BUILD=ON

    - name: Build project with coverage
      run: |
        cmake --build --preset ninja-mc-coverage

    - name: Run tests and generate coverage
      run: |
        cmake --build --preset ninja-mc-coverage --target coverage

    - name: Generate documentation with coverage
      run: |
        cmake --build --preset ninja-mc-coverage --target docs
        
        # List generated files for debugging
        echo "Generated documentation files:"
        find build/ninja-mc-coverage/docs/output/html -name "*.html" | head -10
        echo "Generated coverage files:"
        find build/ninja-mc-coverage/docs/output/html/coverage -name "*.html" | head -5

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: build/ninja-mc-coverage/docs/output/html

  deploy:
    # Only deploy on main branch pushes
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4

  # Build-only job for PRs
  build-pr:
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y doxygen graphviz cmake ninja-build gcovr
        
    - name: Configure CMake with coverage (PR test)
      run: |
        cmake --preset ninja-mc-coverage
        
    - name: Test documentation and coverage build
      run: |
        # Build project
        cmake --build --preset ninja-mc-coverage
        
        # Run tests and generate coverage
        cmake --build --preset ninja-mc-coverage --target coverage
        
        # Generate documentation
        cmake --build --preset ninja-mc-coverage --target docs
        
        # Check that HTML was generated
        if [ ! -d "build/ninja-mc-coverage/docs/output/html" ] || [ -z "$(ls -A build/ninja-mc-coverage/docs/output/html)" ]; then
          echo "ERROR: No HTML documentation was generated"
          exit 1
        fi
        
        # Check that coverage was generated
        if [ ! -d "build/ninja-mc-coverage/docs/output/html/coverage" ] || [ -z "$(ls -A build/ninja-mc-coverage/docs/output/html/coverage)" ]; then
          echo "ERROR: No HTML coverage was generated"
          exit 1
        fi
        
        echo "Documentation and coverage build successful"
        echo "Generated documentation files:"
        find build/ninja-mc-coverage/docs/output/html -name "*.html" | wc -l
        echo "Generated coverage files:"
        find build/ninja-mc-coverage/docs/output/html/coverage -name "*.html" | wc -l
